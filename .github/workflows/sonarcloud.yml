name: Sonarcloud
on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]
  workflow_call:
    secrets:
        SONAR_TOKEN:
          required: true
  workflow_dispatch: ~
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: microsoft/variable-substitution@v1 
        with:
            files: 'tests/ErniAcademy.Events.IntegrationTests/tests.settings.json'
        env:
            Environment: DEV
            Events.ServiceBus.ConnectionString: ${{ secrets.EVENTS_SERVICEBUS_CONNECTIONSTRING }}
            Events.EventGrid.Endpoint: ${{ secrets.EVENTS_EVENTGRID_ENDPOINT }}
            Events.EventGrid.Key: ${{ secrets.EVENTS_EVENTGRID_KEY }}
            Events.EventGrid.ConnectionString: ${{ secrets.EVENTS_EVENTGRID_CONNECTIONSTRING }}
            Events.Redis.ConnectionString: ${{ secrets.EVENTS_REDIS_CONNECTIONSTRING }}
            Events.StorageQueues.ConnectionString: ${{ secrets.EVENTS_STORAGESQUEUES_CONNECTIONSTRING }}
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Install dotnet SonarCloud scanner
        run: |
             dotnet tool install --global dotnet-sonarscanner
        shell: powershell
                  
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
            dotnet sonarscanner begin /k:"ERNI-Academy_assets-events-abstraction" /o:"erni-academy" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
            dotnet build **/*.sln --configuration Release
            dotnet test "*.UnitTests.csproj" --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
            dotnet test "*.IntegrationTests.csproj" --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
            dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"